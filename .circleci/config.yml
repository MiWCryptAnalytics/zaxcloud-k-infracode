# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  deploy_to_kube:
    docker:
      - image: google/cloud-sdk
    environment:
      - PROJECT_NAME: "zaxcloud"
      - GOOGLE_PROJECT_ID: "zaxcloud"
      - GOOGLE_COMPUTE_ZONE: "us-central1-a"
      - GOOGLE_CLUSTER_NAME: "zaxcloud-cluster"
    steps:
      - checkout
      - run: 
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - setup_remote_docker
      - run: 
          name: Deploy to Kubernetes
          command: |
            for filename in $(find deploy -name "*.yml" | rev | cut -d '/' -f1 | rev)
            do
              envsubst < deploy/$filename > rendered/$filename
            done
            cd rendered
            echo "Applying Ingress Controller"
            kubectl apply -f mandatory.yml
            kubectl apply -f cloud-generic.yml
            echo "Applying Mastodon Deployment"
            kubectl apply -f namespace.yml
            kubectl apply -f config.yml
            kubectl apply -f secret.yml
            kubectl apply -f postgres-volume-claim.yml
            kubectl apply -f postgres-deployment.yml
            kubectl apply -f postgres-service.yml
            kubectl apply -f redis-volume-claim.yml
            kubectl apply -f redis-deployment.yml
            kubectl apply -f redis-service.yml
            kubectl apply -f web-deployment.yml
            kubectl apply -f web-service.yml
            kubectl apply -f streaming-deployment.yml
            kubectl apply -f streaming-service.yml
            kubectl apply -f sidekiq-deployment.yml
            kubectl apply -f ingress.yml
            kubectl apply -f external-dns.yml

workflows:
  version: 2
  deploy:
    jobs:
      - deploy_to_kube